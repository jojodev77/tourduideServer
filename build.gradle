
buildscript {
  dependencies {
    classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
  }
}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'TourGuideServer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'



repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
  //SPRING CLOUD CONFIG
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  implementation('org.springframework.boot:spring-boot-starter-jdbc')
  runtimeOnly('com.h2database:h2')
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // https://mvnrepository.com/artifact/com.sun.jersey.contribs/jersey-multipart
  implementation group: 'com.sun.jersey.contribs', name: 'jersey-apache-client4', version: '1.19.4'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '3.1.1'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

// docker: plugin apply
apply plugin: 'com.palantir.docker'

// docker: new task docker
docker {
  dependsOn build
  name "${project.name}"
  files bootJar.archivePath
  buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
